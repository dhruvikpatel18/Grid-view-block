{"version":3,"file":"index.js","mappings":"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E,CACF,CACR,CACA,CAAC;AAEd;;;;;;;;;;;;;;;;ACnRA;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACAM,oEAAiB,CAAEC,6CAAa,EAAE;EACjC;AACD;AACA;AACA;EACIhE,UAAU,EAAE;IACRO,aAAa,EAAE;MACX0D,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;QACL9D,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE,EAAE;QACnBC,aAAa,EAAE;MACnB;IACJ;EACJ,CAAC;EACJ;AACD;AACA;EACC6D,IAAI,EAAErE,6CAAI;EACVsE,IAAI,EAAEA,CAAA,KAAM,IAAI,CAAE;AACnB,CAAE,CAAC;;;;;;;;;;;AC/CH;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://gridview-plugin/./src/edit.js","webpack://gridview-plugin/./src/index.js","webpack://gridview-plugin/./src/editor.scss","webpack://gridview-plugin/./src/style.scss","webpack://gridview-plugin/external window \"React\"","webpack://gridview-plugin/external window [\"wp\",\"blockEditor\"]","webpack://gridview-plugin/external window [\"wp\",\"blocks\"]","webpack://gridview-plugin/external window [\"wp\",\"components\"]","webpack://gridview-plugin/external window [\"wp\",\"element\"]","webpack://gridview-plugin/external window [\"wp\",\"i18n\"]","webpack://gridview-plugin/webpack/bootstrap","webpack://gridview-plugin/webpack/runtime/chunk loaded","webpack://gridview-plugin/webpack/runtime/compat get default export","webpack://gridview-plugin/webpack/runtime/define property getters","webpack://gridview-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://gridview-plugin/webpack/runtime/make namespace object","webpack://gridview-plugin/webpack/runtime/jsonp chunk loading","webpack://gridview-plugin/webpack/before-startup","webpack://gridview-plugin/webpack/startup","webpack://gridview-plugin/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps, InspectorControls } from \"@wordpress/block-editor\";\n\n/**\n * Includes WordPress components for creating custom controls.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-components/\n */\nimport { PanelBody, SelectControl } from \"@wordpress/components\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport \"./editor.scss\";\n\n/**\n * Importing necessary hooks from WordPress Element package\n */\nimport { useState, useEffect } from \"@wordpress/element\";\n\n/**\n * Main Edit function for the WordPress custom block.\n *\n * This function defines the editing behavior of the block and is\n * responsible for rendering controls in the editor and managing state.\n *\n * @param {Object} props - Props passed by WordPress block editor.\n * @returns {JSX.Element} - JSX representation of the block editor view.\n */\nexport default function Edit(props) {\n\t// Destructure props to extract block attributes and setAttributes function\n\tconst { attributes, setAttributes } = props;\n\n\t// Use useBlockProps to apply default block styles\n\tconst blockProps = useBlockProps();\n\n\t// Default terms for the taxonomy selections\n\tconst defaultSelectedTerms = {\n\t\tprojecttype: \"\",\n\t\tprojectcategory: \"\",\n\t\tprojectclient: \"\",\n\t};\n\n\t// Get selected terms from attributes or use default values\n    const { selectedTerms = defaultSelectedTerms } = attributes;\n\n    // Local state to manage selected terms within the block\n    const [localSelectedTerms, setLocalSelectedTerms] = useState(selectedTerms);\n\n    // State to hold taxonomy terms for filtering options\n\tconst [taxonomyTerms, setTaxonomyTerms] = useState({\n\t\tprojecttype: [],\n\t\tprojectcategory: [],\n\t\tprojectclient: [],\n\t});\n\n    // State to store fetched portfolio data\n\tconst [portfolioData, setPortfolioData] = useState(null);\n\n\t/**\n     * Fetches taxonomy terms when the block is first mounted.\n     */\n\tuseEffect(() => {\n\t\tfetchTaxonomyTerms(\"projecttype\");\n\t\tfetchTaxonomyTerms(\"projectcategory\");\n\t\tfetchTaxonomyTerms(\"projectclient\");\n\t}, []); // Empty dependency array ensures this only runs on mount\n\n\t/**\n     * Fetches portfolio data and updates block attributes when localSelectedTerms changes.\n     */\n\tuseEffect(() => {\n\t\tfetchPortfolioData();\n\t\tsetAttributes({ selectedTerms: localSelectedTerms });\n\t}, [localSelectedTerms]); // Re-run when selected terms change\n\n\t/**\n\t * Fetches portfolio data based on selected terms.\n\t * The data is retrieved from a custom REST API endpoint.\n\t */\n\tconst fetchPortfolioData = async () => {\n\t\t// Base URL for fetching portfolio data\n\t\tlet url = `http://localhost:1234/wp-test/wp-json/md-custom/gb-portfolio`;\n\n\t\t// Construct query parameters based on local selected terms\n\t\tconst params = new URLSearchParams();\n\t\tfor (const [key, value] of Object.entries(localSelectedTerms)) {\n\t\t\tif (value) {\n\t\t\t\tparams.append(key, value);\n\t\t\t}\n\t\t}\n\n\t\t// If there are query parameters, add them to the URL\n\t\tif (params.toString()) {\n\t\t\turl += `?${params.toString()}`;\n\t\t}\n\n\t\t// Fetch portfolio data from the constructed URL\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json(); // Parse JSON response\n\t\t// Update the local state with the fetched portfolio data\n\t\tsetPortfolioData(data);\n\t};\n\n\t/**\n\t * Fetches terms for a specific taxonomy and updates the corresponding state.\n\t * Handles errors gracefully and logs them to the console.\n\t *\n\t * @param {string} taxonomy - The taxonomy for which terms are fetched.\n\t */\n\tconst fetchTaxonomyTerms = async (taxonomy) => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`http://localhost:1234/wp-test/wp-json/wp/v2/${taxonomy}`,\n\t\t\t);\n\t\t\t// Parse JSON response to get terms\n\t\t\tconst terms = await response.json();\n\t\t\t// Update the state with fetched terms for the specified taxonomy\n\t\t\tsetTaxonomyTerms((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\t[taxonomy]: terms,\n\t\t\t}));\n\t\t} catch (error) {\n\t\t\t// Log error to console if fetching terms fails\n\t\t\tconsole.error(`Error fetching ${taxonomy} terms:`, error);\n\t\t}\n\t};\n\n\t/**\n\t * Handles changes in the selected term for a specific taxonomy.\n\t * Updates the local state with the new selected value.\n\t *\n\t * @param {string} taxonomy - The taxonomy that is being changed.\n\t * @param {string} value - The new selected value.\n\t */\n\tconst handleTermChange = (taxonomy, value) => {\n\t\tconst updatedTerms = {\n\t\t\t[taxonomy]: value === \"all\" ? \"\" : value,\n\t\t};\n\n\t\tsetLocalSelectedTerms((prevState) => ({\n\t\t\t...prevState,\n\t\t\t...updatedTerms,\n\t\t}));\n\t};\n\n\t/**\n\t * Renders the block's user interface, including inspector controls\n\t * and the portfolio data based on the selected terms.\n\t */\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t{/* Inspector controls for selecting taxonomy terms */}\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title=\"Filters\"> {/* Panel for filter options */}\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Project Type\"\n\t\t\t\t\t\tvalue={localSelectedTerms.projecttype}\n\t\t\t\t\t\tonChange={(value) => handleTermChange(\"projecttype\", value)}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{ label: \"All\", value: \"all\" },\n\t\t\t\t\t\t\t...taxonomyTerms.projecttype.map((term) => ({\n\t\t\t\t\t\t\t\tlabel: term.name,\n\t\t\t\t\t\t\t\tvalue: term.slug,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Project Category\"\n\t\t\t\t\t\tvalue={localSelectedTerms.projectcategory}\n\t\t\t\t\t\tonChange={(value) => handleTermChange(\"projectcategory\", value)}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{ label: \"All\", value: \"all\" },\n\t\t\t\t\t\t\t...taxonomyTerms.projectcategory.map((term) => ({\n\t\t\t\t\t\t\t\tlabel: term.name,\n\t\t\t\t\t\t\t\tvalue: term.slug,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Project Client\"\n\t\t\t\t\t\tvalue={localSelectedTerms.projectclient}\n\t\t\t\t\t\tonChange={(value) => handleTermChange(\"projectclient\", value)}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{ label: \"All\", value: \"all\" },\n\t\t\t\t\t\t\t...taxonomyTerms.projectclient.map((term) => ({\n\t\t\t\t\t\t\t\tlabel: term.name,\n\t\t\t\t\t\t\t\tvalue: term.slug,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t{/* Render portfolio data or loading message */}\n\t\t\t{portfolioData ? (\n\t\t\t\t<PortfolioList portfolioData={portfolioData} />\n\t\t\t) : (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\n/**\n * Component to render a list of portfolio items in a grid format.\n * It displays project details like title, thumbnail, and content excerpt, along with links to the full project.\n *\n * @param {Object} props - The component properties.\n * @param {Array} props.portfolioData - Array of portfolio project objects to display.\n * @returns {JSX.Element} - The JSX element representing the portfolio grid.\n */\nfunction PortfolioList({ portfolioData }) {\n    /**\n     * Function to truncate content to a specified length, appending an ellipsis (\"...\") if truncated.\n     *\n     * @param {string} content - The original content string to be truncated.\n     * @param {number} maxLength - The maximum allowed length before truncation.\n     * @returns {string} - The truncated content, with ellipsis if needed.\n     */\n    const truncateContent = (content, maxLength) => {\n        if (content.length > maxLength) {\n            return content.substring(0, maxLength) + \"...\"; // Truncate and add ellipsis\n        } else {\n            return content; // No truncation needed\n        }\n    };\n\n    return (\n        <div className=\"portfolio-grid\">\n            {portfolioData.map((project) => (\n                // Render each portfolio project as a grid item\n                <div key={project.id} className=\"portfolio-item\">\n                    {/* Project title with a link to the full project */}\n                    <a href={project.permalink} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <h2>{project.title}</h2> {/* Display project title */}\n                    </a>\n\n                    {/* Display project thumbnail image if available */}\n                    {project.thumbnail ? (\n                        <img src={project.thumbnail} alt={project.title} /> \n                    ) : (\n                        <div>No image available</div> // Fallback if no thumbnail\n                    )}\n\n                    {/* Display a truncated version of the project content */}\n                    <div\n                        dangerouslySetInnerHTML={{\n                            __html: truncateContent(project.content, 100), // Truncate content to 100 characters\n                        }}\n                    />\n\n                    {/* Link to read more about the project */}\n                    <a href={project.permalink} target=\"_blank\" rel=\"noopener noreferrer\">\n                        Read more\n                    </a>\n                </div>\n            ))}\n        </div>\n    );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n     * Block attributes define the data structure for the block.\n     * Attributes can be used to store block-specific data.\n     */\n    attributes: {\n        selectedTerms: {\n            type: 'object',\n            default: {\n                projecttype: '',\n                projectcategory: '',\n                projectclient: '',\n            },\n        },\n    },\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\tsave: () => null, // For dynamic blocks, return null or a function\n} );\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkgridview_plugin\"] = globalThis[\"webpackChunkgridview_plugin\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InspectorControls","PanelBody","SelectControl","useState","useEffect","Edit","props","attributes","setAttributes","blockProps","defaultSelectedTerms","projecttype","projectcategory","projectclient","selectedTerms","localSelectedTerms","setLocalSelectedTerms","taxonomyTerms","setTaxonomyTerms","portfolioData","setPortfolioData","fetchTaxonomyTerms","fetchPortfolioData","url","params","URLSearchParams","key","value","Object","entries","append","toString","response","fetch","data","json","taxonomy","terms","prevState","error","console","handleTermChange","updatedTerms","createElement","title","label","onChange","options","map","term","name","slug","PortfolioList","truncateContent","content","maxLength","length","substring","className","project","id","href","permalink","target","rel","thumbnail","src","alt","dangerouslySetInnerHTML","__html","registerBlockType","metadata","type","default","edit","save"],"sourceRoot":""}